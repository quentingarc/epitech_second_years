1.   client event logged in 

int client_event_logged_in(char const  user_uuid, const char  user_name);

Must be called when a user successfully login to the server.
When you log in (/login) you should also receive from the server this event.
param user_uuid The id of the user who logged in.
param user_name The name of the user who logged in

use it => /login "user_name"

-------------------------------------------------------------------------------------------
 
2.   client event logged out

int client_event_logged_out(char const  user_uuid, const char  user_name);

Must be called when a user logged out (/logout or lost connexion).
 When you log out (/logout) you should also receive the event before quitting.
param user_uuid The id of the user who logged out.
param user_name The name of the user who logged out.

use it => /logout

-------------------------------------------------------------------------------------------

3.   client event private message received

int client_event_private_message_received(char const  user_uuid, char const  message_body);

Must be called when the current logged user receives a private message.
param user_uuid The id of the user that sent the private message.
param message_body The body of the private message.

use it => /send "user_uuid" "message_body"

-------------------------------------------------------------------------------------------
 
4.1    client event thread reply received

int client_event_thread_reply_received(char const  team_uuid, char const  thread_uuid,
                                       char const  user_uuid, char const  reply_body);

Must be called when a new reply is posted in a thread.
param team_uuid The id of the team this reply is in.
param thread_uuid The id of the thread this reply is in.
param user_uuid The id of the user that created the reply.
param reply_body The reply body.

use it => /create "reply_body"

-------------------------------------------------------------------------------------------
 
4.2    client event team created

int client_event_team_created(char const  team_uuid, char const  team_name,
                              char const  team_description);

Must be called when a channel is created inside of a team.
param channel_uuid The id of the created channel.
param channel_name The name of the created channel.
param channel_description The description of the created channel.

use it => /create "channel_name" "channel_description"

-------------------------------------------------------------------------------------------
 
4.3    client event thread created

int client_event_thread_created(char const  thread_uuid, char const  user_uuid,
                                 time_t thread_timestamp, char const  thread_title,
                                 char const  thread_body);

Must be called when a thread is created inside of a channel.
thread_uuid The id of the created thread.
user_uuid The id of the user who created the thread.
thread_timestamp The unix timestamp of the thread creation.
thread_title The title of the created thread.
thread_body The body of the created thread.

use it => /create "thread_title" "thread_body"

-------------------------------------------------------------------------------------------

5.    client print users

int client_print_users(char const  user_uuid, char const  user_name, int user_status);

Must be called when you requested a list of users from the server
ex: asking the subscribed users to a team / the list of users in a domain
This function should be called once per user in the list
This function should be called even if the list only has one entry
user_uuid The id of a user
user_name The name of a user
user_status The status of a user (0: not connected; 1: connected)
user_status is NOT the number of simultaneous connexion of a user

use it => /users
       => /subscribed "team_uuid"

-------------------------------------------------------------------------------------------

6.    client print teams

int client_print_teams(char const  team_uuid, char const  team_name,
                       char const  team_description);

Must be called when you requested a list of channels from the server
ex: asking the channels in a team
This function should be called one per channel in the list
This function should be called even if the list only has one entry
param channel_uuid The id of a channel
param channel_name The name of a channel
param channel_description The description of a channel

use it => /list
       => /subscribed

-------------------------------------------------------------------------------------------

7.    client team print channels

int client_team_print_channels(char const  channel_uuid, char const  channel_name,
                                 char const  channel_description);

Must be called when you requested a list of channels from the server
ex: asking the channels in a team
This function should be called one per channel in the list
This function should be called even if the list only has one entry
param channel_uuid The id of a channel
param channel_name The name of a channel
param channel_description The description of a channel

use it => /list

-------------------------------------------------------------------------------------------

8.    client channel print threads

int client_channel_print_threads(char const *thread_uuid, char const *user_uuid, time_t thread_timestamp, char const *thread_title, char const *thread_body);

Must be called when you requested a list of threads from the server
ex: asking the threads in a channel
This function should be called one per thread in the list
This function should be called even if the list only has one entry
param thread_uuid The id of a thread
param user_uuid The id of the user who created a thread
param thread_timestamp The unix timestamp of a thread creation
param thread_title The title of a thread
param thread_body The body of a thread

use it => /list

-------------------------------------------------------------------------------------------

9.    client thread print replies

int client_thread_print_replies(char const *thread_uuid, char const *user_uuid, time_t reply_timestamp, char const *reply_body);

Must be called when you requested a list of replies from the server
ex: asking the replies in a thread
This function should be called one per reply in the list
This function should be called even if the list only has one entry
param thread_uuid The id of the thread a reply belongs to
param user_uuid The id of the user who created a reply
param reply_timestamp The unix timestamp of a reply creation
param reply_body The body of a reply
 
use it => /list

-------------------------------------------------------------------------------------------

10.    client private message print messages

int client_private_message_print_messages(char const *sender_uuid, time_t message_timestamp,
                                          char const *message_body);

Must be called when you requested a list of private messages
ex: asking the private messages with a user
This function should be called one per private  message in the list
This function should be called even if the list only has one entry
param sender_uuid The id of the user who sent a private message
param message_timestamp The unix timestamp of a private message creation
param message_body The content of a private message
 
use it =>  /messages "user_uuid"

-------------------------------------------------------------------------------------------

11.1    client error unknown team

int client_error_unknown_team(char const *team_uuid);

Must be called when the user try to do an action
with a team that does not exist (list channels, subscribe, etc...)
param team_uuid The id that was given and does not exist
 
use it => /subscribe "team_uuid"
       => /unsubscribe "team_uuid"
       => /subscribed "team_uuid"
       => /list
       => /create "channel_name" "channel_description"
       => /create "thread_title" "thread_body"
       => /create "reply_body"
       => /info

-------------------------------------------------------------------------------------------

11.2    client error unknown channel

int client_error_unknown_channel(char const *channel_uuid);

Must be called when the user try to do an action
with a channel that does not exist (list threads, create thread, etc...)
param channel_uuid The id that was given and does not exist
 
use it => /list
       => /create "thread_title" "thread_body"
       => /create "reply_body"
       => /info

-------------------------------------------------------------------------------------------

11.3    client error unknown thread

int client_error_unknown_thread(char const *thread_uuid);

Must be called when the user try to do an action
with a thread that does not exist (list replies, create reply, etc...)
param thread_uuid The id that was given and does not exist
 
use it => /list
       => /create "reply_body"
       => /info

-------------------------------------------------------------------------------------------

11.4    client error unknown user

int client_error_unknown_user(char const *user_uuid);

Must be called when the user try to do an action
with a user that does not exist (send private message, /user)
param user_uuid The id that was given and does not exist
 
use it => /send "user_uuid" "message_body"
       => /user "user_uuid"
       => /messages "user_uuid"

-------------------------------------------------------------------------------------------

11.5    client error unauthorized

int client_error_unauthorized(void);

Must be called when the user try to do an action he is not allowed
to perform.
Ex: create a thread in a team he is not subscribed
Ex: create a team when he is not logged in
 
use it => Everything 
except => /login

-------------------------------------------------------------------------------------------

11.6    client error already exist

int client_error_already_exist(void);

Must be called when the user try to do an action and the resource
already exist.
Ex: create a team with a name that already exist
This error based itself on the name/title of the object created
 
use it => /create "team_name" "team_description"
       => /create "channel_name" "channel_description"
       => /create "thread_title" "thread_body"

-------------------------------------------------------------------------------------------

12.1    client print user

int client_print_user(char const *user_uuid, char const *user_name, int user_status);

Must be called when you requested an individual user
ex: get the current logged user, get information about a user
param user_uuid The id of the user
param user_name The name of the user
param user_status The status of the user (0: not connected; 1: connected)

use it => /user "user_uuid"
       => /info

-------------------------------------------------------------------------------------------

12.2    client print team

int client_print_team(char const *team_uuid, char const *team_name,
                      char const *team_description);

Must be called when you requested an individual team
ex: get the current used team
param team_uuid The id of the team
param team_name The name of the team
param team_description The description of the team
 
use it => /info

-------------------------------------------------------------------------------------------

12.3    client print channel

int client_print_channel(char const *channel_uuid, char const *channel_name,
                         char const *channel_description);

Must be called when you requested an individual channel
ex: get the current used channel
param channel_uuid The id of the channel
param channel_name The name of the channel
param channel_description The description of the channel
 
use it => /info

-------------------------------------------------------------------------------------------

12.4    client print thread

int client_print_thread(char const *thread_uuid, char const *user_uuid, time_t thread_timestamp,
                        char const *thread_title, char const *thread_body);

Must be called when you requested an individual thread
ex: get the current used thread
param thread_uuid The id of the thread
param user_uuid The id of the user who created the thread
param thread_timestamp The unix timestamp of the creation of the thread
param thread_title The title of the thread
param thread_body The body of the thread
 
use it => /info

-------------------------------------------------------------------------------------------

12.5    client print team created

int client_print_team_created(char const *team_uuid, char const *team_name,
                              char const *team_description);

Must be called when you create a team successfully
param team_uuid The id of the team that was created
param team_name The name of the team that was created
param team_description The description of the team that was created
 
use it => /create "team_name" "team_description"

-------------------------------------------------------------------------------------------

12.6    client print channel created

int client_print_channel_created(char const *channel_uuid, char const *channel_name,
                                 char const *channel_description);

Must be called when you create channel successfully
param channel_uuid The id of the channel that was created
param channel_name The name of the channel that was created
param channel_description The description of the channel that was created
 
use it => /create "channel_name" "channel_description"
 
-------------------------------------------------------------------------------------------

12.7    client print thread created

int client_print_thread_created(char const *thread_uuid, char const *user_uuid,
                                time_t thread_timestamp, char const *thread_title,
                                char const *thread_body);

Must be called when you create a thread successfully
param thread_uuid The id of the thread that was created
param user_uuid The id of the user who created the thread
param thread_timestamp The unix timestamp of the thread creation
param thread_title The title of the thread that was created
param thread_body The body of the thread that was created
 
use it => /create "thread_title" "thread_body"

-------------------------------------------------------------------------------------------

12.8    client print reply created

int client_print_reply_created(char const *thread_uuid, char const *user_uuid,
                               time_t reply_timestamp, char const *reply_body);

Must be called when you create a reply successfully
param thread_uuid The id of the thread this reply was created in
param user_uuid The id of the user who created the reply
param reply_timestamp The unix timestamp of the created reply
param reply_body The body of the created reply
 
use it => /create "reply_body"

-------------------------------------------------------------------------------------------

12.9    client print subscribed

int client_print_subscribed(char const *user_uuid, char const *team_uuid);

Must be called when you subscribe to a team successfully
param user_uuid The id of the user who subscribed to the team
param team_uuid The id of the team the user subscribed to
 
use it => /subscribe "team_uuid"

-------------------------------------------------------------------------------------------

12.10    client print unsubscribed

Must be called when you unsubscribe from a team successfully
param user_uuid The id of the user who unsubscribed from the team
param team_uuid The id of the team the user unsubscribed from
 
use it => /unsubscribe "team_uuid"

int client_print_unsubscribed(char const *user_uuid, char const *team_uuid);